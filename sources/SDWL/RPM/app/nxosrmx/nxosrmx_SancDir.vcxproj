<?xml version="1.0" encoding="utf-8"?>
<Project DefaultTargets="Build" ToolsVersion="15.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <ItemGroup Label="ProjectConfigurations">
    <ProjectConfiguration Include="Debug|Win32">
      <Configuration>Debug</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|Win32">
      <Configuration>Release</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Debug|x64">
      <Configuration>Debug</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|x64">
      <Configuration>Release</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
  </ItemGroup>
  <PropertyGroup Label="Globals">
    <VCProjectVersion>15.0</VCProjectVersion>
    <ProjectGuid>{F787BEC1-6E0C-426F-870E-B2488021C15F}</ProjectGuid>
    <Keyword>Win32Proj</Keyword>
    <RootNamespace>nxrmcore</RootNamespace>
    <WindowsTargetPlatformVersion>10.0.14393.0</WindowsTargetPlatformVersion>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.Default.props" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'" Label="Configuration">
    <ConfigurationType>DynamicLibrary</ConfigurationType>
    <UseDebugLibraries>true</UseDebugLibraries>
    <PlatformToolset>v140</PlatformToolset>
    <CharacterSet>Unicode</CharacterSet>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'" Label="Configuration">
    <ConfigurationType>DynamicLibrary</ConfigurationType>
    <UseDebugLibraries>false</UseDebugLibraries>
    <PlatformToolset>v140</PlatformToolset>
    <WholeProgramOptimization>true</WholeProgramOptimization>
    <CharacterSet>Unicode</CharacterSet>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'" Label="Configuration">
    <ConfigurationType>DynamicLibrary</ConfigurationType>
    <UseDebugLibraries>true</UseDebugLibraries>
    <PlatformToolset>v140</PlatformToolset>
    <CharacterSet>Unicode</CharacterSet>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'" Label="Configuration">
    <ConfigurationType>DynamicLibrary</ConfigurationType>
    <UseDebugLibraries>false</UseDebugLibraries>
    <PlatformToolset>v140</PlatformToolset>
    <WholeProgramOptimization>true</WholeProgramOptimization>
    <CharacterSet>Unicode</CharacterSet>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.props" />
  <ImportGroup Label="ExtensionSettings">
  </ImportGroup>
  <ImportGroup Label="Shared">
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <PropertyGroup Label="UserMacros" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <LinkIncremental>true</LinkIncremental>
    <OutDir>$(ProjectDir)bin_SancDir\$(Platform)\$(Configuration)\</OutDir>
    <IntDir>bin_SancDir\$(Platform)\$(Configuration)\</IntDir>
    <TargetName>nxosrmx$(PlatformArchitecture)</TargetName>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">
    <LinkIncremental>true</LinkIncremental>
    <OutDir>$(ProjectDir)bin_SancDir\$(Platform)\$(Configuration)\</OutDir>
    <IntDir>bin_SancDir\$(Platform)\$(Configuration)\</IntDir>
    <TargetName>nxosrmx$(PlatformArchitecture)</TargetName>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">
    <LinkIncremental>false</LinkIncremental>
    <OutDir>$(ProjectDir)bin_SancDir\$(Platform)\$(Configuration)\</OutDir>
    <IntDir>bin_SancDir\$(Platform)\$(Configuration)\</IntDir>
    <TargetName>nxosrmx$(PlatformArchitecture)</TargetName>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <LinkIncremental>false</LinkIncremental>
    <OutDir>$(ProjectDir)bin_SancDir\$(Platform)\$(Configuration)\</OutDir>
    <IntDir>bin_SancDir\$(Platform)\$(Configuration)\</IntDir>
    <TargetName>nxosrmx$(PlatformArchitecture)</TargetName>
  </PropertyGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <ClCompile>
      <PrecompiledHeader>Use</PrecompiledHeader>
      <WarningLevel>Level3</WarningLevel>
      <Optimization>Disabled</Optimization>
      <PreprocessorDefinitions>_DEBUG;NXRMCORE_EXPORTS;_WINDOWS;_USRDLL;NEXTLABS_FEATURE_SKYDRM_SANCTUARY_DIR;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <ConformanceMode>true</ConformanceMode>
      <AdditionalIncludeDirectories>..\..\..\..\..\external\boost;..\..\nudf\v2\inc;..\..\..\..\include\SDWL;$(ProjectDir)thirdLib\madCHook;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <RuntimeLibrary>MultiThreadedDebug</RuntimeLibrary>
    </ClCompile>
    <Link>
      <SubSystem>Windows</SubSystem>
      <GenerateDebugInformation>true</GenerateDebugInformation>
      <AdditionalLibraryDirectories>..\..\..\..\..\build\build.msvc_SancDir\$(PlatformName)_$(ConfigurationName);..\..\..\..\..\external\openssl\$(PlatformName)\lib\$(ConfigurationName);..\..\..\..\..\external\Boost\lib\$(Platform.ToLower().Replace("win32", "x86"))\$(Configuration);$(ProjectDir)thirdLib\madCHook;$(NLGITEXTERNALDIR)\openssl\$(PlatformName)_$(ConfigurationName);%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
      <AdditionalDependencies>SDWRmcLib_SancDir.lib;Version.lib;Iphlpapi.lib;Urlmon.lib;Secur32.lib;Mpr.lib;Winhttp.lib;Shlwapi.lib;Ws2_32.lib;Wtsapi32.lib;Bcrypt.lib;Crypt32.lib;libeay32.lib;madCHook64mt.lib;%(AdditionalDependencies)</AdditionalDependencies>
    </Link>
    <PostBuildEvent>
      <Command>if not exist "$(SolutionDir)bin_SancDir\$(Platform)\$(Configuration)" mkdir "$(SolutionDir)bin_SancDir\$(Platform)\$(Configuration)"
if not exist "$(SolutionDir)lib_SancDir\$(Platform)\$(Configuration)" mkdir "$(SolutionDir)lib_SancDir\$(Platform)\$(Configuration)"
copy /y "$(OutDir)$(TargetName)$(TargetExt)" "$(SolutionDir)bin_SancDir\$(Platform)\$(Configuration)"
copy /y "$(Outdir)$(TargetName).pdb" "$(SolutionDir)bin_SancDir\$(Platform)\$(Configuration)"
copy /y "$(Outdir)$(TargetName).lib" "$(SolutionDir)lib_SancDir\$(Platform)\$(Configuration)"</Command>
    </PostBuildEvent>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">
    <ClCompile>
      <PrecompiledHeader>Use</PrecompiledHeader>
      <WarningLevel>Level3</WarningLevel>
      <Optimization>Disabled</Optimization>
      <PreprocessorDefinitions>WIN32;_DEBUG;NXRMCORE_EXPORTS;_WINDOWS;_USRDLL;NEXTLABS_FEATURE_SKYDRM_SANCTUARY_DIR;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <ConformanceMode>true</ConformanceMode>
      <AdditionalIncludeDirectories>..\..\..\..\..\external\boost;..\..\nudf\v2\inc;..\..\..\..\include\SDWL;$(ProjectDir)thirdLib\madCHook;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <RuntimeLibrary>MultiThreadedDebug</RuntimeLibrary>
    </ClCompile>
    <Link>
      <SubSystem>Windows</SubSystem>
      <GenerateDebugInformation>true</GenerateDebugInformation>
      <AdditionalLibraryDirectories>..\..\..\..\..\build\build.msvc_SancDir\$(PlatformName)_$(ConfigurationName);..\..\..\..\..\external\openssl\$(PlatformName)\lib\$(ConfigurationName);..\..\..\..\..\external\Boost\lib\$(Platform.ToLower().Replace("win32", "x86"))\$(Configuration);$(ProjectDir)thirdLib\madCHook;$(NLGITEXTERNALDIR)\openssl\$(PlatformName)_$(ConfigurationName);%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
      <AdditionalDependencies>SDWRmcLib_SancDir.lib;Version.lib;Iphlpapi.lib;Urlmon.lib;Secur32.lib;Mpr.lib;Winhttp.lib;Shlwapi.lib;Ws2_32.lib;Wtsapi32.lib;Bcrypt.lib;Crypt32.lib;libeay32.lib;madCHook32.lib;%(AdditionalDependencies)</AdditionalDependencies>
    </Link>
    <PostBuildEvent>
      <Command>if not exist "$(SolutionDir)bin_SancDir\$(Platform)\$(Configuration)" mkdir "$(SolutionDir)bin_SancDir\$(Platform)\$(Configuration)"
if not exist "$(SolutionDir)lib_SancDir\$(Platform)\$(Configuration)" mkdir "$(SolutionDir)lib_SancDir\$(Platform)\$(Configuration)"
copy /y "$(OutDir)$(TargetName)$(TargetExt)" "$(SolutionDir)bin_SancDir\$(Platform)\$(Configuration)"
copy /y "$(Outdir)$(TargetName).pdb" "$(SolutionDir)bin_SancDir\$(Platform)\$(Configuration)"
copy /y "$(Outdir)$(TargetName).lib" "$(SolutionDir)lib_SancDir\$(Platform)\$(Configuration)"</Command>
    </PostBuildEvent>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">
    <ClCompile>
      <PrecompiledHeader>Use</PrecompiledHeader>
      <WarningLevel>Level3</WarningLevel>
      <Optimization>MaxSpeed</Optimization>
      <FunctionLevelLinking>true</FunctionLevelLinking>
      <IntrinsicFunctions>true</IntrinsicFunctions>
      <PreprocessorDefinitions>WIN32;NDEBUG;NXRMCORE_EXPORTS;_WINDOWS;_USRDLL;NEXTLABS_FEATURE_SKYDRM_SANCTUARY_DIR;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <ConformanceMode>true</ConformanceMode>
      <RuntimeLibrary>MultiThreaded</RuntimeLibrary>
      <AdditionalIncludeDirectories>..\..\..\..\..\external\boost;..\..\nudf\v2\inc;..\..\..\..\include\SDWL;$(ProjectDir)thirdLib\madCHook;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
    </ClCompile>
    <Link>
      <SubSystem>Windows</SubSystem>
      <EnableCOMDATFolding>true</EnableCOMDATFolding>
      <OptimizeReferences>true</OptimizeReferences>
      <GenerateDebugInformation>true</GenerateDebugInformation>
      <AdditionalLibraryDirectories>..\..\..\..\..\build\build.msvc_SancDir\$(PlatformName)_$(ConfigurationName);..\..\..\..\..\external\openssl\$(PlatformName)\lib\$(ConfigurationName);..\..\..\..\..\external\Boost\lib\$(Platform.ToLower().Replace("win32", "x86"))\$(Configuration);$(ProjectDir)thirdLib\madCHook;$(NLGITEXTERNALDIR)\openssl\$(PlatformName)_$(ConfigurationName);%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
      <AdditionalDependencies>SDWRmcLib_SancDir.lib;Version.lib;Iphlpapi.lib;Urlmon.lib;Secur32.lib;Mpr.lib;Winhttp.lib;Shlwapi.lib;Ws2_32.lib;Wtsapi32.lib;Bcrypt.lib;Crypt32.lib;libeay32.lib;legacy_stdio_definitions.lib;madCHook32.lib;%(AdditionalDependencies)</AdditionalDependencies>
      <ImageHasSafeExceptionHandlers>false</ImageHasSafeExceptionHandlers>
    </Link>
    <PostBuildEvent>
      <Command>if not exist "$(SolutionDir)bin_SancDir\$(Platform)\$(Configuration)" mkdir "$(SolutionDir)bin_SancDir\$(Platform)\$(Configuration)"
if not exist "$(SolutionDir)lib_SancDir\$(Platform)\$(Configuration)" mkdir "$(SolutionDir)lib_SancDir\$(Platform)\$(Configuration)"
copy /y "$(OutDir)$(TargetName)$(TargetExt)" "$(SolutionDir)bin_SancDir\$(Platform)\$(Configuration)"
copy /y "$(Outdir)$(TargetName).pdb" "$(SolutionDir)bin_SancDir\$(Platform)\$(Configuration)"
copy /y "$(Outdir)$(TargetName).lib" "$(SolutionDir)lib_SancDir\$(Platform)\$(Configuration)"</Command>
    </PostBuildEvent>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <ClCompile>
      <PrecompiledHeader>Use</PrecompiledHeader>
      <WarningLevel>Level3</WarningLevel>
      <Optimization>MaxSpeed</Optimization>
      <FunctionLevelLinking>true</FunctionLevelLinking>
      <IntrinsicFunctions>true</IntrinsicFunctions>
      <PreprocessorDefinitions>NDEBUG;NXRMCORE_EXPORTS;_WINDOWS;_USRDLL;NEXTLABS_FEATURE_SKYDRM_SANCTUARY_DIR;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <ConformanceMode>true</ConformanceMode>
      <AdditionalIncludeDirectories>..\..\..\..\..\external\boost;..\..\nudf\v2\inc;..\..\..\..\include\SDWL;$(ProjectDir)thirdLib\madCHook;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <RuntimeLibrary>MultiThreaded</RuntimeLibrary>
    </ClCompile>
    <Link>
      <SubSystem>Windows</SubSystem>
      <EnableCOMDATFolding>true</EnableCOMDATFolding>
      <OptimizeReferences>true</OptimizeReferences>
      <GenerateDebugInformation>true</GenerateDebugInformation>
      <AdditionalLibraryDirectories>..\..\..\..\..\build\build.msvc_SancDir\$(PlatformName)_$(ConfigurationName);..\..\..\..\..\external\openssl\$(PlatformName)\lib\$(ConfigurationName);..\..\..\..\..\external\Boost\lib\$(Platform.ToLower().Replace("win32", "x86"))\$(Configuration);$(ProjectDir)thirdLib\madCHook;$(NLGITEXTERNALDIR)\openssl\$(PlatformName)_$(ConfigurationName);%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
      <AdditionalDependencies>SDWRmcLib_SancDir.lib;Version.lib;Iphlpapi.lib;Urlmon.lib;Secur32.lib;Mpr.lib;Winhttp.lib;Shlwapi.lib;Ws2_32.lib;Wtsapi32.lib;Bcrypt.lib;Crypt32.lib;libeay32.lib;legacy_stdio_definitions.lib;madCHook64mt.lib;%(AdditionalDependencies)</AdditionalDependencies>
    </Link>
    <PostBuildEvent>
      <Command>if not exist "$(SolutionDir)bin_SancDir\$(Platform)\$(Configuration)" mkdir "$(SolutionDir)bin_SancDir\$(Platform)\$(Configuration)"
if not exist "$(SolutionDir)lib_SancDir\$(Platform)\$(Configuration)" mkdir "$(SolutionDir)lib_SancDir\$(Platform)\$(Configuration)"
copy /y "$(OutDir)$(TargetName)$(TargetExt)" "$(SolutionDir)bin_SancDir\$(Platform)\$(Configuration)"
copy /y "$(Outdir)$(TargetName).pdb" "$(SolutionDir)bin_SancDir\$(Platform)\$(Configuration)"
copy /y "$(Outdir)$(TargetName).lib" "$(SolutionDir)lib_SancDir\$(Platform)\$(Configuration)"</Command>
    </PostBuildEvent>
  </ItemDefinitionGroup>
  <ItemGroup>
    <ClInclude Include="config.h" />
    <ClInclude Include="droptarget.h" />
    <ClInclude Include="filedialog.h" />
    <ClInclude Include="global_data_model.h" />
    <ClInclude Include="hook.h" />
    <ClInclude Include="osrmx.h" />
    <ClInclude Include="overlay.h" />
    <ClInclude Include="registry_whitelist.h" />
    <ClInclude Include="resource.h" />
    <ClInclude Include="sdk.h" />
    <ClInclude Include="stdafx.h" />
    <ClInclude Include="targetver.h" />
    <ClInclude Include="utils.h" />
  </ItemGroup>
  <ItemGroup>
    <ClCompile Include="config.cpp" />
    <ClCompile Include="dllmain.cpp" />
    <ClCompile Include="droptarget.cpp" />
    <ClCompile Include="filedialog.cpp" />
    <ClCompile Include="global_data_model.cpp" />
    <ClCompile Include="hook.cpp" />
    <ClCompile Include="osrmx.cpp" />
    <ClCompile Include="overlay.cpp" />
    <ClCompile Include="registry_whitelist.cpp" />
    <ClCompile Include="sdk.cpp" />
    <ClCompile Include="stdafx.cpp">
      <PrecompiledHeader Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Create</PrecompiledHeader>
      <PrecompiledHeader Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">Create</PrecompiledHeader>
      <PrecompiledHeader Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">Create</PrecompiledHeader>
      <PrecompiledHeader Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Create</PrecompiledHeader>
    </ClCompile>
    <ClCompile Include="utils.cpp" />
  </ItemGroup>
  <ItemGroup>
    <ResourceCompile Include="nxosrmx.rc" />
  </ItemGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.targets" />
  <ImportGroup Label="ExtensionTargets">
  </ImportGroup>
</Project>