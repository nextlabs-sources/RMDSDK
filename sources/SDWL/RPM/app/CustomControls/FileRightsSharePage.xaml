<Page x:Class="CustomControls.FileRightsSharePage"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
      xmlns:helper="clr-namespace:CustomControls.common.helper"
      xmlns:local="clr-namespace:CustomControls"
      xmlns:component="clr-namespace:CustomControls.components"
      mc:Ignorable="d" 
      d:DesignHeight="550" d:DesignWidth="800"
      Title="FileRightsSharePage">

    <Page.Resources>
        <helper:UriToBitmapImageConverter x:Key="uri2Image"/>
        
        <!-- MouseOver button style without the image Scale-->
        <Style x:Key="MouseOverBtnStyle" TargetType="{x:Type Button}">
            <Setter Property="Button.Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Grid>
                            <!-- Border style-->
                            <Border Name="Border" BorderBrush="#F5D350" BorderThickness="1" CornerRadius="3" Visibility="Hidden" >
                                <Border.Background>
                                    <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                        <GradientStop Color="#FDEEB3" Offset="0"/>
                                        <GradientStop Color="#FDE690" Offset="0.3"/>
                                        <GradientStop Color="#FDEEAE" Offset="0.56"/>
                                        <GradientStop Color="#FFFFFF" Offset="1"/>
                                    </LinearGradientBrush>
                                </Border.Background>
                            </Border>
                            <Image  Stretch="Fill" 
                                Source="{TemplateBinding Content, Converter={StaticResource uri2Image}}"                             
                                RenderTransformOrigin="0.5,0.5"/>
                        </Grid>
                        <!--Triggers-->
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter TargetName="Border" Property="Visibility" Value="Visible"></Setter>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter TargetName="Border" Property="Visibility" Value="Visible"></Setter>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        
    </Page.Resources>
    
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="auto"/>
        </Grid.RowDefinitions>

        <component:CaptionDesc4 Grid.Row="0" x:Name="captionDesc4"/>

        <TextBlock Grid.Row="1" Margin="{Binding SavePathMargin}"
                   FontSize="11" FontFamily="Lato" VerticalAlignment="Center" >
            <Run Foreground="{Binding SavePathLabelForegrd}" Text="{Binding SavePathLabel}"/>
            <Run Foreground="#2F80ED" Text="{Binding SavePath}"/>
            <Run Foreground="{Binding SavePathLabelForegrd}" Text="{DynamicResource FileRightsShare_SavePath_Lable2}"/>
        </TextBlock>

        <component:AdhocAndClassifiedRights Grid.Row="2" Margin="140,5,140,0" x:Name="adhocAndclassifiedRights"/>

        <StackPanel Grid.Row="3" Orientation="Vertical">
            <TextBlock Margin="0,10,0,5" HorizontalAlignment="Center" Foreground="Black" FontSize="14" FontFamily="Lato" 
                       Text="{DynamicResource FileRightsShare_ShareWith_Lable}"/>
            
            <DockPanel LastChildFill="True" Margin="140,0,140,0" Visibility="{Binding EmailInputVisibility}">
                <Button  Margin="10,0,0,0" DockPanel.Dock="Right" Height="30" Width="30" Cursor="Hand"
                         Command="local:FRShare_DataCommands.AddEmail"
                         Content="/CustomControls;component/resources/icons/icon_add_email.png"
                         Style="{StaticResource MouseOverBtnStyle}"/>
                <TextBox DockPanel.Dock="Left" Height="28">
                    <!--changed the template using ControlTemplate-->
                    <TextBox.Template>
                        <ControlTemplate TargetType="TextBox">
                            <Grid>
                                <Rectangle x:Name="rec" Opacity="0.8" Stroke="#E0E0E0"/>

                                <TextBlock x:Name="tbx_hint"  Margin="10,0,0,0" Opacity="0.5" FontFamily="Lato" FontSize="12"
                                           VerticalAlignment="Center" Visibility="Collapsed"
                                           Text="{DynamicResource FileRightsShare_AddEmail_Lable}"/>

                                <TextBox x:Name="tbx_content" Background="Transparent" BorderThickness="0"
                                         FontSize="13" Height="20"
                                         InputMethod.IsInputMethodEnabled="False" 
                                         VerticalAlignment="Center" VerticalContentAlignment="Center"
                                         TextChanged="EmailTB_TextChanged" PreviewKeyDown="EmailTB_PreviewKeyDown"/>
                            </Grid>

                            <!--Control the visible and hide by controlTemplate Trigger.-->
                            <ControlTemplate.Triggers>
                                <Trigger SourceName="tbx_content" Property="Text" Value="" >
                                    <Setter TargetName="tbx_hint" Property="Visibility" Value="Visible"/>
                                </Trigger>

                                <!--<Trigger SourceName="tbx_content" Property="IsFocused" Value="true">
                                    <Setter TargetName="tbx_hint" Property="Visibility" Value="Hidden"/>
                                    <Setter TargetName="rec"  Property="Stroke" Value="#F9E080"/>
                                </Trigger>-->

                                <!--<Trigger SourceName="tbx_content" Property="IsMouseOver" Value="true">
                                    <Setter TargetName="rec"  Property="Stroke" Value="#F9E080"/>
                                </Trigger>-->

                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </TextBox.Template>
                </TextBox>
            </DockPanel>
            
            <ItemsControl Margin="{Binding EmailListMargin}" MaxHeight="70" ItemsSource="{Binding EmailList}">
                <ItemsControl.Template>
                    <ControlTemplate>
                        <Border
                                BorderThickness="{TemplateBinding Border.BorderThickness}"
                                Padding="{TemplateBinding Control.Padding}"
                                BorderBrush="{TemplateBinding Border.BorderBrush}"
                                Background="{TemplateBinding Panel.Background}"
                                SnapsToDevicePixels="True">
                            <ScrollViewer Padding="{TemplateBinding Control.Padding}" VerticalScrollBarVisibility="Auto">
                                <ItemsPresenter SnapsToDevicePixels="{TemplateBinding 
                                               UIElement.SnapsToDevicePixels}"/>
                            </ScrollViewer>
                        </Border>
                    </ControlTemplate>
                </ItemsControl.Template>

                <ItemsControl.ItemsPanel>
                    <ItemsPanelTemplate>
                        <WrapPanel />
                    </ItemsPanelTemplate>
                </ItemsControl.ItemsPanel>

                <ItemsControl.ItemTemplate>
                    <DataTemplate >
                        <Border Padding="3">
                            <WrapPanel>
                                <Border  Background="#E5E5E5" BorderThickness="1" CornerRadius="4" Margin="0,0,5,5" >
                                    <StackPanel  Orientation="Horizontal" Width="auto" MaxWidth="470">
                                        <TextBlock Margin="5,5,0,5" Foreground="Black"
                                                   MaxWidth="430" TextTrimming="CharacterEllipsis"
                                                   Text="{Binding Path=.}" ToolTip="{Binding Path=.}" />
                                        <Image Margin="10,0,5,0" Tag="{Binding Path=.}"
                                               Source="/CustomControls;component/resources/icons/icon_delete.png"
                                               MouseLeftButtonUp="DeleteEmailItem_MouseLeftButtonUp"/>
                                    </StackPanel>
                                </Border>
                            </WrapPanel>
                        </Border>
                    </DataTemplate>
                </ItemsControl.ItemTemplate>
            </ItemsControl>
        </StackPanel>

        <StackPanel Grid.Row="4" Margin="140,10,140,0" Visibility="{Binding MsgStpVisibility}">
            <TextBlock HorizontalAlignment="Center" Foreground="Black" FontSize="14" FontFamily="Lato" Margin="0,0,0,5">                     
                        <Run Text="{DynamicResource FileRightsShare_Message_Lable}"/>
                        <Run Foreground="#BDBDBD" Text="{DynamicResource FileRightsShare_Message_Lable2}"/>
            </TextBlock>
            
            <Border BorderBrush="#E0E0E0" BorderThickness="1" CornerRadius="3" >
                <TextBox BorderThickness="0">
                    <TextBox.Template>
                        <ControlTemplate TargetType="TextBox">
                            <Grid>
                                <Rectangle x:Name="rec" Opacity="0.8" Stroke="#E0E0E0"/>

                                <TextBlock x:Name="tbx_hint" Margin="10,10,10,10" Opacity="0.5" 
                                           FontFamily="Lato" FontSize="12" Height="60" 
                                           VerticalAlignment="Center" Visibility="Collapsed"
                                           Text="{DynamicResource FileRightsShare_AddMessage_Lable}" />

                                <TextBox x:Name="tbx_content" Background="Transparent" BorderThickness="0" 
                                         FontSize="13" Height="60" TextWrapping="Wrap"
                                         InputMethod.IsInputMethodEnabled="False" 
                                         TextChanged="MessageTB_TextChanged"/>
                            </Grid>
                            <!--Control the visible and hide by controlTemplate Trigger.-->
                            <ControlTemplate.Triggers>
                                <Trigger SourceName="tbx_content" Property="Text" Value="" >
                                    <Setter TargetName="tbx_hint" Property="Visibility" Value="Visible"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </TextBox.Template>
                </TextBox>
            </Border>

            <!--Prompt info & input lengh-->
            <DockPanel>
                <!--Tip info-->
                <TextBlock Text="{DynamicResource FileRightsShare_Message_Exceed}" Visibility="{Binding MsgExceedInfoVisibility}" Foreground="Red" Margin="0,0,0,0"/>
                <!--Input Length-->
                <StackPanel Orientation="Horizontal" HorizontalAlignment="Right">
                    <TextBlock Text="{Binding RemainCharacters}" Foreground="Black"/>
                    <TextBlock Text="{Binding MaxCharacters}"/>
                </StackPanel>
            </DockPanel>
        </StackPanel>
        
        <StackPanel Grid.Row="5" Margin="0,20,0,50" Orientation="Horizontal" HorizontalAlignment="Center">
            <Button Content="{Binding PositiveBtnContent}"
                     Command="local:FRShare_DataCommands.Positive"
                    Visibility="{Binding PositiveBtnVisibility}"
                     Style="{StaticResource UnifiedBtnStyle_Positive}"/>
            <Button Margin="12,0,0,0"  Content="{DynamicResource Windows_Btn_Back}" 
                    Command="local:FRShare_DataCommands.Back"
                    Visibility="{Binding BackBtnVisibility}"
                    Style="{StaticResource UnifiedBtnStyle_Negtive}"/>
            <Button Margin="12,0,0,0"  Content="{DynamicResource Windows_Btn_Cancel}" 
                    Command="local:FRShare_DataCommands.Cancel"
                    Style="{StaticResource UnifiedBtnStyle_Negtive}"/>
        </StackPanel>
    </Grid>
</Page>
